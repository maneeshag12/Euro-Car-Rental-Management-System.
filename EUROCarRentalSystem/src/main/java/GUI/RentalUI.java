/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.Image;
import java.sql.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Vector;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Roshana Perera
 */
public class RentalUI extends javax.swing.JFrame {
    
    public static String SelectedVehicleNo;
    public static String SelectedVehicleRate;
    public static String SelectedVehicleMake;
    public static String SelectedVehicleModel;
    public static int CustomerID;
    public static int DriverID;
    public static String DriverRate;
    
    public static String RCustName = "Roshana Perera";
    public static String RCustAddress;
    public static String RCustNumber;
    public static String RCustEmail;
    public static String RCustPDate;
    public static String RCustRDate;
    public static String RCustTotal;
    public static String RCustVehiNo;
    public static String RCustVehiMake;
    public static String RCustVehiModel;

    /**
     * Creates new form RentalUI
     */
    public RentalUI() {
        initComponents();
        CusTable_Update();
        VehiTable_Update();
        DriverListUpdate();
        tabRent.setEnabledAt(1, false);
        //txtDescriotion.setText("Test");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        tabRent = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblVehicle = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtDescriotion = new javax.swing.JTextArea();
        lblImage = new javax.swing.JLabel();
        lblVMsg = new javax.swing.JLabel();
        txtCarSearch = new javax.swing.JTextField();
        txtSearchMake = new javax.swing.JButton();
        txtSearchModel = new javax.swing.JButton();
        txtSearchYear = new javax.swing.JButton();
        txtSearchReset = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        btnNext1 = new javax.swing.JButton();
        btnClearReset1 = new javax.swing.JButton();
        btnHome1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtCNIC = new javax.swing.JTextField();
        txtCName = new javax.swing.JTextField();
        txtCAddress = new javax.swing.JTextField();
        txtCNumber = new javax.swing.JTextField();
        txtCEmail = new javax.swing.JTextField();
        btnCSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCustomer = new javax.swing.JTable();
        btnCSubmit = new javax.swing.JButton();
        btnCClear = new javax.swing.JButton();
        txtCPDate = new com.toedter.calendar.JDateChooser();
        txtCRDate = new com.toedter.calendar.JDateChooser();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        chkDriver = new javax.swing.JCheckBox();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblDriver = new javax.swing.JTable();
        jSeparator4 = new javax.swing.JSeparator();
        btnFinish = new javax.swing.JButton();
        txtVCost = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtDCost = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtTotalCost = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        btnCalTot = new javax.swing.JButton();
        btnCSupdate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setSize(new java.awt.Dimension(900, 600));

        jPanel1.setBackground(new java.awt.Color(25, 35, 51));

        jLabel1.setFont(new java.awt.Font("Leelawadee", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Rent A Car");

        jPanel2.setBackground(new java.awt.Color(71, 120, 217));

        tabRent.setBackground(new java.awt.Color(71, 120, 217));

        jPanel3.setBackground(new java.awt.Color(71, 120, 217));

        tblVehicle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vehicle No.", "Make", "Model", "Mileage", "Year", "Rate", "Availability"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblVehicle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblVehicleMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblVehicle);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Vehicle Description");

        txtDescriotion.setEditable(false);
        txtDescriotion.setColumns(20);
        txtDescriotion.setRows(5);
        jScrollPane3.setViewportView(txtDescriotion);

        lblImage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblVMsg.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblVMsg.setForeground(new java.awt.Color(255, 255, 255));
        lblVMsg.setText("Please select a vehicle first...");

        txtCarSearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtSearchMake.setFont(new java.awt.Font("Malgun Gothic", 0, 12)); // NOI18N
        txtSearchMake.setText("Search by Make");
        txtSearchMake.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchMakeActionPerformed(evt);
            }
        });

        txtSearchModel.setFont(new java.awt.Font("Malgun Gothic", 0, 12)); // NOI18N
        txtSearchModel.setText("Search by Model");
        txtSearchModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchModelActionPerformed(evt);
            }
        });

        txtSearchYear.setText("Search by Year");
        txtSearchYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchYearActionPerformed(evt);
            }
        });

        txtSearchReset.setText("Reset Search");
        txtSearchReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchResetActionPerformed(evt);
            }
        });

        btnNext1.setFont(new java.awt.Font("Malgun Gothic", 0, 14)); // NOI18N
        btnNext1.setText("Next");
        btnNext1.setEnabled(false);
        btnNext1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNext1ActionPerformed(evt);
            }
        });

        btnClearReset1.setFont(new java.awt.Font("Malgun Gothic", 0, 14)); // NOI18N
        btnClearReset1.setText("Clear / Reset");

        btnHome1.setFont(new java.awt.Font("Malgun Gothic", 0, 14)); // NOI18N
        btnHome1.setText("Home");
        btnHome1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHome1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 740, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(lblVMsg)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                                .addComponent(txtSearchMake, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(txtSearchModel, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtCarSearch, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(lblImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addComponent(txtSearchYear, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(txtSearchReset, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addGap(279, 279, 279))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(btnNext1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnClearReset1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnHome1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtCarSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSearchMake)
                            .addComponent(txtSearchModel)
                            .addComponent(txtSearchYear, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSearchReset, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblVMsg)
                        .addGap(73, 73, 73)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNext1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnClearReset1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnHome1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        tabRent.addTab("Select Vehicle / Driver", jPanel3);

        jPanel4.setBackground(new java.awt.Color(71, 120, 217));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Customer NIC");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Customer Name");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Customer Address");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Contact Number");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("E-mail Address");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Pickup Date");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Return Date");

        txtCNIC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtCName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtCAddress.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtCNumber.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtCEmail.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btnCSearch.setFont(new java.awt.Font("Malgun Gothic", 0, 14)); // NOI18N
        btnCSearch.setText("Search");
        btnCSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCSearchActionPerformed(evt);
            }
        });

        tblCustomer.setBorder(new javax.swing.border.MatteBorder(null));
        tblCustomer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NIC", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCustomer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCustomerMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCustomer);
        if (tblCustomer.getColumnModel().getColumnCount() > 0) {
            tblCustomer.getColumnModel().getColumn(0).setPreferredWidth(15);
            tblCustomer.getColumnModel().getColumn(1).setPreferredWidth(20);
        }

        btnCSubmit.setFont(new java.awt.Font("Malgun Gothic", 0, 14)); // NOI18N
        btnCSubmit.setText("Add Customer");
        btnCSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCSubmitActionPerformed(evt);
            }
        });

        btnCClear.setFont(new java.awt.Font("Malgun Gothic", 0, 14)); // NOI18N
        btnCClear.setText("Clear");
        btnCClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCClearActionPerformed(evt);
            }
        });

        txtCPDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtCRDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Need a Driver ?");

        chkDriver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkDriverActionPerformed(evt);
            }
        });

        tblDriver.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblDriver.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDriverMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tblDriver);
        if (tblDriver.getColumnModel().getColumnCount() > 0) {
            tblDriver.getColumnModel().getColumn(0).setPreferredWidth(4);
        }

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        btnFinish.setFont(new java.awt.Font("Malgun Gothic", 0, 14)); // NOI18N
        btnFinish.setText("Finish Rental");
        btnFinish.setEnabled(false);
        btnFinish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinishActionPerformed(evt);
            }
        });

        txtVCost.setEditable(false);
        txtVCost.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Driver's Cost");

        txtDCost.setEditable(false);
        txtDCost.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Vehice's Cost");

        txtTotalCost.setEditable(false);
        txtTotalCost.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Total Rental Cost");

        jSeparator5.setOrientation(javax.swing.SwingConstants.VERTICAL);

        btnCalTot.setFont(new java.awt.Font("Malgun Gothic", 0, 14)); // NOI18N
        btnCalTot.setText("Calculate Total");
        btnCalTot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalTotActionPerformed(evt);
            }
        });

        btnCSupdate.setFont(new java.awt.Font("Malgun Gothic", 0, 14)); // NOI18N
        btnCSupdate.setText("Update Customer");
        btnCSupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCSupdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(chkDriver)
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel13)
                            .addComponent(jLabel12))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTotalCost, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtVCost, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDCost, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnCalTot, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(127, 127, 127)
                        .addComponent(btnFinish, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(48, 48, 48)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(btnCClear, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                                        .addComponent(btnCSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtCNIC)
                                    .addComponent(txtCNumber)
                                    .addComponent(txtCAddress, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtCName)
                                    .addComponent(txtCEmail))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnCSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(37, 37, 37)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtCPDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtCRDate, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(33, 33, 33)
                                        .addComponent(btnCSupdate)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(44, 44, 44))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtCNIC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCSearch))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtCName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtCAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(txtCNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(txtCEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(txtCPDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(txtCRDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnCSupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnCSubmit)
                                .addComponent(btnCClear))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtVCost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDCost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(txtTotalCost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCalTot)))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addComponent(btnFinish, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(55, 55, 55))
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(chkDriver)
                                .addComponent(jLabel10)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        tabRent.addTab("Customer Details", jPanel4);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabRent, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabRent, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(600, 600, 600)
                .addComponent(jLabel1)
                .addContainerGap(687, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(181, 181, 181))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 601, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCSubmitActionPerformed
        // TODO add your handling code here:
        String CNIC = txtCNIC.getText();
        String CName = txtCName.getText();
        String CAddress = txtCAddress.getText();
        String CNumber = txtCNumber.getText();
        String CEmail = txtCEmail.getText();
        SimpleDateFormat SDFormatCPDate = new SimpleDateFormat("yyyy-MM-dd");
        //String CPDate = SDFormatCPDate.format(txtCPDate.getDate());
        //String CRDate = SDFormatCPDate.format(txtCRDate.getDate());
        boolean ans=validatecustomerform(CName,CAddress,CNIC,CNumber,CEmail);
        if(ans==false)
        {
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3308/euro_db", "root", "");
            String sql = ("INSERT INTO `customer` (`cusName`, `cusAddress`, `cusNIC`, `cusContactNo`, `cusEmail`) VALUES (?, ?, ?, ?, ?)");
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, CName);
            ps.setString(2, CAddress);
            ps.setString(3, CNIC);
            ps.setString(4, CNumber);
            ps.setString(5, CEmail);
            
            ps.executeUpdate();
            CusTable_Update();
            
            JOptionPane.showMessageDialog(this, "Customer Details Added Successfully !");
            
            con.close();
            txtCNIC.setText("");
            txtCName.setText("");
            txtCAddress.setText("");
            txtCNumber.setText("");
            txtCEmail.setText("");
        }
        catch (ClassNotFoundException | SQLException ex)
        {
            JOptionPane.showMessageDialog(null, ex);
        }
        }
    }//GEN-LAST:event_btnCSubmitActionPerformed

    private void btnCSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCSearchActionPerformed
        // TODO add your handling code here:
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3308/euro_db", "root", "");
            String searchq = txtCNIC.getText();
            String sql = ("SELECT * FROM customer WHERE cusNIC = '"+searchq+"'");
            PreparedStatement pst1 = con.prepareStatement(sql);
            ResultSet rs1 = pst1.executeQuery();
            
            if (rs1.next())
            {
                txtCNIC.setText(rs1.getString("cusNIC"));
                txtCName.setText(rs1.getString("cusName"));
                txtCAddress.setText(rs1.getString("cusAddress"));
                txtCNumber.setText(rs1.getString("cusContactNo"));
                txtCEmail.setText(rs1.getString("cusEmail"));
                CustomerID = rs1.getInt("cusID");
           }
            
            con.close();
        }
        catch (ClassNotFoundException | SQLException e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnCSearchActionPerformed

    private void tblVehicleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblVehicleMouseClicked
        // TODO add your handling code here:
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3308/euro_db", "root", "");
            
            int row = tblVehicle.getSelectedRow();
            String TableClick=(tblVehicle.getModel().getValueAt(row,0).toString());
            
            String sql = ("SELECT * FROM vehicle WHERE vehicleNo = '"+TableClick+"'");
            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            
            if (rs.next())
            {
                SelectedVehicleNo = (rs.getString("vehicleNo"));
                SelectedVehicleRate = (rs.getString("rate"));
                SelectedVehicleMake = rs.getString("make");
                SelectedVehicleModel = rs.getString("model");
                txtVCost.setText(SelectedVehicleRate);
                txtDescriotion.setText(rs.getString("description"));
                String tempPath = (rs.getString("imagePath"));
                lblVMsg.setText("You have selected a " +rs.getString("make")+ " " +rs.getString("model")+ ". Please click next to continue the vehicle renting process.");
                ImageIcon imageicon = new ImageIcon(new ImageIcon(tempPath).getImage().getScaledInstance (277, 232, Image.SCALE_SMOOTH));
                lblImage.setIcon(imageicon);
                String avb = (rs.getString("availability"));
                //JOptionPane.showMessageDialog(null, avb);
                
                if ("Available".equals(avb))
                {
                    //JOptionPane.showMessageDialog(null, "Selected Vehicle Available");
                    btnNext1.setEnabled(true);
                }
                else
                {
                    btnNext1.setEnabled(false);
                    JOptionPane.showMessageDialog(null, "Selected Vehicle is not Available. Please select a different Vehicle");
                }
//                }
            }
        }
        catch (ClassNotFoundException | SQLException e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_tblVehicleMouseClicked

    private void btnNext1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNext1ActionPerformed
        // TODO add your handling code here:
        
        tabRent.setSelectedIndex(1);
    }//GEN-LAST:event_btnNext1ActionPerformed

    private void btnHome1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHome1ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        MainUI mainui = new MainUI();
        mainui.setVisible(true);
    }//GEN-LAST:event_btnHome1ActionPerformed

    private void tblCustomerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCustomerMouseClicked
        // TODO add your handling code here:
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3308/euro_db", "root", "");
            
            int row = tblCustomer.getSelectedRow();
            String TableClick=(tblCustomer.getModel().getValueAt(row,0).toString());
            
            String sql = ("SELECT * FROM customer WHERE cusNIC = '"+TableClick+"'");
            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            
            if (rs.next())
            {
                CustomerID = rs.getInt("cusID");
                txtCNIC.setText(rs.getString("cusNIC"));
                txtCName.setText(rs.getString("cusName"));
                txtCAddress.setText(rs.getString("cusAddress"));
                txtCNumber.setText(rs.getString("cusContactNo"));
                txtCEmail.setText(rs.getString("cusEmail"));
            }
        }
        catch (ClassNotFoundException | SQLException e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_tblCustomerMouseClicked

    private void btnFinishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinishActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat dateformat1 = new SimpleDateFormat("yyyy-MM-dd");
        String cpdate = dateformat1.format(txtCPDate.getDate());
        String crdate = dateformat1.format(txtCRDate.getDate());
        boolean ans2=datevalidate(cpdate,crdate);
        if(ans2==false)
        {
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3308/euro_db", "root", "");
            String sql = ("INSERT INTO `rental`(`renID`, `cusID`, `vehicleNo`, `driverID`, `renPickupDate`, `renReturndate`, `renTotal`) VALUES (NULL, ?, ?, ?, ?, ?, ?)");
            PreparedStatement ps = con.prepareStatement(sql);
            
            String sql2 = ("UPDATE `employee` SET `Availability`='Unavailable' WHERE empID = '"+DriverID+"'");
            Statement st2 = con.createStatement();
            
            String sql3 = ("UPDATE `vehicle` SET `availability`='Unavailable' WHERE vehicleNo = '"+SelectedVehicleNo+"'");
            Statement st3 = con.createStatement();
            
            ps.setInt(1, CustomerID);
            ps.setString(2, SelectedVehicleNo);
            ps.setInt(3, DriverID);
            ps.setString(4, cpdate);
            ps.setString(5, crdate);
            ps.setFloat(6, Float.parseFloat(txtTotalCost.getText()));
            
            ps.executeUpdate();
            st2.executeUpdate(sql2);
            st3.executeUpdate(sql3);
            
            JOptionPane.showMessageDialog(this, "Rental confirmed !");
            
            con.close();
        }
        catch (ClassNotFoundException | SQLException e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        
        
        RCustName = txtCName.getText();
        RCustAddress = txtCAddress.getText();
        RCustPDate = cpdate;
        RCustRDate = crdate;
        RCustTotal = txtTotalCost.getText();
        RCustVehiNo = SelectedVehicleNo;
        RCustVehiMake = SelectedVehicleMake;
        RCustVehiModel = SelectedVehicleModel;
        
        PrintReceipt print = new PrintReceipt();
        print.setVisible(true);
        
        }
    }//GEN-LAST:event_btnFinishActionPerformed

    private void tblDriverMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDriverMouseClicked
        // TODO add your handling code here:
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3308/euro_db", "root", "");
            
            int row = tblDriver.getSelectedRow();
            String TableClick=(tblDriver.getModel().getValueAt(row,0).toString());
            
            String sql = ("SELECT * FROM employee WHERE designation = 'Driver' AND empID = '"+TableClick+"'");
            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            
            if (rs.next())
            {
                DriverID = rs.getInt("empID");
                DriverRate = rs.getString("basicSallary");
                txtDCost.setText(DriverRate);
                chkDriver.setSelected(true);
                btnFinish.setEnabled(false);
            }
        }
        catch (ClassNotFoundException | SQLException e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_tblDriverMouseClicked

    private void txtSearchMakeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchMakeActionPerformed
        // TODO add your handling code here:
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3308/euro_db", "root", "");
            String searchmake = txtCarSearch.getText();
            String sql1 = ("select * from vehicle where make = '"+searchmake+"'");
            PreparedStatement pst1 = con.prepareStatement(sql1);
            ResultSet rs1 = pst1.executeQuery();
            DefaultTableModel df  = (DefaultTableModel)tblVehicle.getModel();
            df.setRowCount(0);
            ResultSetMetaData rd  = rs1.getMetaData();
            int c = rd.getColumnCount();
            
            while (rs1.next())
            {
                Vector v2 = new Vector();
                for (int i=1; i<=c; i++)
                {
                    v2.add(rs1.getString("vehicleNo"));
                    v2.add(rs1.getString("make"));
                    v2.add(rs1.getString("model"));
                    v2.add(rs1.getString("mileage"));
                    v2.add(rs1.getString("year"));
                    v2.add(rs1.getString("rate"));
                    v2.add(rs1.getString("availability"));
                }
                df.addRow(v2);
            }

            con.close();
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_txtSearchMakeActionPerformed

    private void txtSearchModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchModelActionPerformed
        // TODO add your handling code here:
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3308/euro_db", "root", "");
            String searchmake = txtCarSearch.getText();
            String sql1 = ("select * from vehicle where model = '"+searchmake+"'");
            PreparedStatement pst1 = con.prepareStatement(sql1);
            ResultSet rs1 = pst1.executeQuery();
            DefaultTableModel df  = (DefaultTableModel)tblVehicle.getModel();
            df.setRowCount(0);
            ResultSetMetaData rd  = rs1.getMetaData();
            int c = rd.getColumnCount();
            
            while (rs1.next())
            {
                Vector v2 = new Vector();
                for (int i=1; i<=c; i++)
                {
                    v2.add(rs1.getString("vehicleNo"));
                    v2.add(rs1.getString("make"));
                    v2.add(rs1.getString("model"));
                    v2.add(rs1.getString("mileage"));
                    v2.add(rs1.getString("year"));
                    v2.add(rs1.getString("rate"));
                    v2.add(rs1.getString("availability"));
                }
                df.addRow(v2);
            }

            con.close();
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_txtSearchModelActionPerformed

    private void txtSearchYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchYearActionPerformed
        // TODO add your handling code here:
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3308/euro_db", "root", "");
            String searchmake = txtCarSearch.getText();
            String sql1 = ("select * from vehicle where year = '"+searchmake+"'");
            PreparedStatement pst1 = con.prepareStatement(sql1);
            ResultSet rs1 = pst1.executeQuery();
            DefaultTableModel df  = (DefaultTableModel)tblVehicle.getModel();
            df.setRowCount(0);
            ResultSetMetaData rd  = rs1.getMetaData();
            int c = rd.getColumnCount();
            
            while (rs1.next())
            {
                Vector v2 = new Vector();
                for (int i=1; i<=c; i++)
                {
                    v2.add(rs1.getString("vehicleNo"));
                    v2.add(rs1.getString("make"));
                    v2.add(rs1.getString("model"));
                    v2.add(rs1.getString("mileage"));
                    v2.add(rs1.getString("year"));
                    v2.add(rs1.getString("rate"));
                    v2.add(rs1.getString("availability"));
                }
                df.addRow(v2);
            }

            con.close();
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_txtSearchYearActionPerformed

    private void txtSearchResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchResetActionPerformed
        // TODO add your handling code here:
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3308/euro_db", "root", "");
            PreparedStatement pst = con.prepareStatement("SELECT * FROM vehicle");
            ResultSet rs = pst.executeQuery();
            ResultSetMetaData rd  = rs.getMetaData();
            int c = rd.getColumnCount();
            DefaultTableModel df  = (DefaultTableModel)tblVehicle.getModel();
            
            df.setRowCount(0);
            
            while (rs.next())
            {
                Vector v2 = new Vector();
                for (int i=1; i<=c; i++)
                {
                    v2.add(rs.getString("vehicleNo"));
                    v2.add(rs.getString("make"));
                    v2.add(rs.getString("model"));
                    v2.add(rs.getString("mileage"));
                    v2.add(rs.getString("year"));
                    v2.add(rs.getString("rate"));
                    v2.add(rs.getString("availability"));
                }
                df.addRow(v2);
            }

            con.close();
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_txtSearchResetActionPerformed

    private void btnCClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCClearActionPerformed
        // TODO add your handling code here:
        txtCNIC.setText("");
        txtCName.setText("");
        txtCAddress.setText("");
        txtCNumber.setText("");
        txtCEmail.setText("");
        btnFinish.setEnabled(false);
    }//GEN-LAST:event_btnCClearActionPerformed

    private void btnCalTotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalTotActionPerformed
        // TODO add your handling code here:
        float vehiclec = Float.parseFloat(txtVCost.getText());
        
        float totalc;
        if (txtDCost.getText().equals(""))
        {
            totalc = vehiclec;
        }
        else
        {
            float driverc = Float.parseFloat(txtDCost.getText());
            totalc = vehiclec + driverc;
        }
        txtTotalCost.setText(String.valueOf(totalc));
        btnFinish.setEnabled(true);
    }//GEN-LAST:event_btnCalTotActionPerformed

    private void chkDriverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkDriverActionPerformed
        // TODO add your handling code here:
        if (chkDriver.isSelected()==true)
        {
            txtDCost.setText(DriverRate);
        }
        else
        {
            txtDCost.setText("");
        }
        btnFinish.setEnabled(false);
    }//GEN-LAST:event_chkDriverActionPerformed

    private void btnCSupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCSupdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCSupdateActionPerformed
    
    public void VehiTable_Update()
    {
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3308/euro_db", "root", "");
            PreparedStatement pst = con.prepareStatement("SELECT * FROM vehicle");
            ResultSet rs = pst.executeQuery();
            ResultSetMetaData rd  = rs.getMetaData();
            int c = rd.getColumnCount();
            DefaultTableModel df  = (DefaultTableModel)tblVehicle.getModel();
            
            df.setRowCount(0);
            
            while (rs.next())
            {
                Vector v2 = new Vector();
                for (int i=1; i<=c; i++)
                {
                    v2.add(rs.getString("vehicleNo"));
                    v2.add(rs.getString("make"));
                    v2.add(rs.getString("model"));
                    v2.add(rs.getString("mileage"));
                    v2.add(rs.getString("year"));
                    v2.add(rs.getString("rate"));
                    v2.add(rs.getString("availability"));
                }
                df.addRow(v2);
            }

            con.close();
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    public void CusTable_Update()
    {
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3308/euro_db", "root", "");
            PreparedStatement pst = con.prepareStatement("SELECT * FROM customer");
            ResultSet rs = pst.executeQuery();
            ResultSetMetaData rd  = rs.getMetaData();
            int c = rd.getColumnCount();
            DefaultTableModel df  = (DefaultTableModel)tblCustomer.getModel();
            df.setRowCount(0);
            
            while (rs.next())
            {
                Vector v = new Vector();
                for (int i=1; i<=c; i++)
                {
                    v.add(rs.getString("cusNIC"));
                    v.add(rs.getString("cusName"));
                }
                df.addRow(v);
            }
            con.close();
        }
        catch (SQLException | ClassNotFoundException e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    public void DriverListUpdate()
    {
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3308/euro_db", "root", "");
            PreparedStatement ps = con.prepareStatement("SELECT * FROM employee WHERE designation = 'Driver' AND Availability = 'Available'");
            ResultSet rs = ps.executeQuery();
            ResultSetMetaData rd  = rs.getMetaData();
            int c = rd.getColumnCount();
            DefaultTableModel df  = (DefaultTableModel)tblDriver.getModel();
            df.setRowCount(0);
            
            while (rs.next())
            {
                Vector v = new Vector();
                for (int i=1; i<=c; i++)
                {
                    v.add(rs.getString("empID"));
                    v.add(rs.getString("empName"));
                }
                df.addRow(v);
            }
            con.close();
        }
        catch (ClassNotFoundException | SQLException e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RentalUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RentalUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RentalUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RentalUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RentalUI().setVisible(true);
            }
        });
    }
    
    public boolean validatecustomerform(String name,String address,String NIC,String contactno,String email)
    {
        boolean errorFlag = false;


        if(name==null || name.equals(""))
        {
            JOptionPane.showMessageDialog(null, "Please enter valid customer-name.");
            errorFlag=true;
        }
        if(address==null || address.equals(""))
        {
            JOptionPane.showMessageDialog(null, "Please enter valid customer-address.");
            errorFlag=true;
        }
        Pattern pattern = Pattern.compile("\\d{10}");
        Matcher matcher = pattern.matcher(contactno);
        
        if(contactno==null || contactno.equals("")||! matcher.matches())
        {
            
            JOptionPane.showMessageDialog(null, "Please enter valid customer-contact number");
            errorFlag=true;
        }
        
        if(email==null || email.equals("")||!email.matches("^[A-Za-z0-9_.]+[@][A-Za-z.]+$"))
        {
            JOptionPane.showMessageDialog(null, "Please enter valid customer-email address.");
            errorFlag=true;
        }

        if(NIC==null || NIC.equals("")||!NIC.matches("^[0-9]{0,12}[vVxX]$"))
        {
            JOptionPane.showMessageDialog(null, "Please enter valid customer-NIC.");
            errorFlag=true;
        }
        
        return errorFlag;    
    }
    
    public boolean datevalidate(String pdate,String rdate)
    {
        boolean errorFlag = false;
        DateFormat dateFormat2 = new SimpleDateFormat("yyyy-MM-dd");
        String dateString2 = dateFormat2.format(new java.util.Date());
        if (!(pdate.equals(dateString2)))
        {
            JOptionPane.showMessageDialog(null, "Pick up date shold be todays day.");
            errorFlag=true;
        }
        if(!(pdate.compareTo(rdate)<0))
        {
            JOptionPane.showMessageDialog(null, "Return Date should be further date than pickup date.");
            errorFlag=true;
        }
        return errorFlag;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCClear;
    private javax.swing.JButton btnCSearch;
    private javax.swing.JButton btnCSubmit;
    private javax.swing.JButton btnCSupdate;
    private javax.swing.JButton btnCalTot;
    private javax.swing.JButton btnClearReset1;
    private javax.swing.JButton btnFinish;
    private javax.swing.JButton btnHome1;
    private javax.swing.JButton btnNext1;
    private javax.swing.JCheckBox chkDriver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblVMsg;
    private javax.swing.JTabbedPane tabRent;
    private javax.swing.JTable tblCustomer;
    private javax.swing.JTable tblDriver;
    private javax.swing.JTable tblVehicle;
    private javax.swing.JTextField txtCAddress;
    private javax.swing.JTextField txtCEmail;
    private javax.swing.JTextField txtCNIC;
    private javax.swing.JTextField txtCName;
    private javax.swing.JTextField txtCNumber;
    private com.toedter.calendar.JDateChooser txtCPDate;
    private com.toedter.calendar.JDateChooser txtCRDate;
    private javax.swing.JTextField txtCarSearch;
    private javax.swing.JTextField txtDCost;
    private javax.swing.JTextArea txtDescriotion;
    private javax.swing.JButton txtSearchMake;
    private javax.swing.JButton txtSearchModel;
    private javax.swing.JButton txtSearchReset;
    private javax.swing.JButton txtSearchYear;
    private javax.swing.JTextField txtTotalCost;
    private javax.swing.JTextField txtVCost;
    // End of variables declaration//GEN-END:variables
}
