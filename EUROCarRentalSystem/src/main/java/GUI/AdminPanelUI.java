/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Properties;
import java.util.Vector;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Roshana Perera
 */
public class AdminPanelUI extends javax.swing.JFrame {

    String CusEmailAdd;
    String usernameS;
    Connection con;
    PreparedStatement ps1;
    Statement st1;
    ResultSet rs;
    ResultSetMetaData rsmd;
    
    /**
     * Creates new form AdminPanelUI
     */
    public AdminPanelUI() {
        initComponents();
        UserTableUpdate();
        EmployeeTableUpdate();
        NotificationTableUpdate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblNotify = new javax.swing.JTable();
        lblNotify = new javax.swing.JLabel();
        btnSendNotify = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUser = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        btnCheckUsername = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtDisplayName = new javax.swing.JTextField();
        cmbUserType = new javax.swing.JComboBox<>();
        txtPassword = new javax.swing.JPasswordField();
        txtPasswordConfirm = new javax.swing.JPasswordField();
        btnAddUser = new javax.swing.JButton();
        btnUpdateUser = new javax.swing.JButton();
        btnBlockUser = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtEmpNIC = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblEmployee = new javax.swing.JTable();
        btnAddEmp = new javax.swing.JButton();
        btnUpdateEmp = new javax.swing.JButton();
        btnCheckNIC = new javax.swing.JButton();
        txtEmpName = new javax.swing.JTextField();
        cmbEmpDesignation = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtEmpAddress = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtEmpContactNo = new javax.swing.JTextField();
        txtEmpEmail = new javax.swing.JTextField();
        txtEmpBasicSal = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(71, 120, 217));

        jTabbedPane1.setBackground(new java.awt.Color(71, 120, 217));
        jTabbedPane1.setFont(new java.awt.Font("Leelawadee", 0, 14)); // NOI18N

        jPanel5.setBackground(new java.awt.Color(71, 120, 217));

        tblNotify.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer ID", "Customer Name", "E-mail", "Vehicle Number"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblNotify.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNotifyMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblNotify);
        if (tblNotify.getColumnModel().getColumnCount() > 0) {
            tblNotify.getColumnModel().getColumn(0).setPreferredWidth(4);
        }

        lblNotify.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblNotify.setForeground(new java.awt.Color(255, 255, 255));
        lblNotify.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNotify.setText(" ");

        btnSendNotify.setFont(new java.awt.Font("Malgun Gothic", 0, 14)); // NOI18N
        btnSendNotify.setText("Send Notification (E-mail)");
        btnSendNotify.setEnabled(false);
        btnSendNotify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendNotifyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 950, Short.MAX_VALUE)
                    .addComponent(lblNotify, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(396, Short.MAX_VALUE)
                .addComponent(btnSendNotify)
                .addGap(392, 392, 392))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblNotify)
                .addGap(18, 18, 18)
                .addComponent(btnSendNotify, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Send Notifications", jPanel5);

        jPanel2.setBackground(new java.awt.Color(71, 120, 217));

        tblUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Display Name", "Username", "User Type", "User Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblUserMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblUser);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Username");

        txtUserName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtUserName.setNextFocusableComponent(btnCheckUsername);

        btnCheckUsername.setFont(new java.awt.Font("Malgun Gothic", 0, 12)); // NOI18N
        btnCheckUsername.setText("Check Username");
        btnCheckUsername.setNextFocusableComponent(txtDisplayName);
        btnCheckUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckUsernameActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("User Type");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Password");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Confirm Password");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Display Name");

        txtDisplayName.setNextFocusableComponent(cmbUserType);

        cmbUserType.setFont(new java.awt.Font("Malgun Gothic", 0, 14)); // NOI18N
        cmbUserType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Standard", "Admin" }));
        cmbUserType.setNextFocusableComponent(txtPassword);

        txtPassword.setNextFocusableComponent(txtPasswordConfirm);

        txtPasswordConfirm.setNextFocusableComponent(btnAddUser);

        btnAddUser.setFont(new java.awt.Font("Malgun Gothic", 0, 14)); // NOI18N
        btnAddUser.setText("Add User");
        btnAddUser.setEnabled(false);
        btnAddUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddUserActionPerformed(evt);
            }
        });

        btnUpdateUser.setFont(new java.awt.Font("Malgun Gothic", 0, 14)); // NOI18N
        btnUpdateUser.setText("Update User");
        btnUpdateUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateUserActionPerformed(evt);
            }
        });

        btnBlockUser.setFont(new java.awt.Font("Malgun Gothic", 0, 14)); // NOI18N
        btnBlockUser.setText("Block User");
        btnBlockUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBlockUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAddUser, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDisplayName)
                    .addComponent(txtUserName)
                    .addComponent(txtPasswordConfirm)
                    .addComponent(txtPassword)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(cmbUserType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(138, 138, 138))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnCheckUsername, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                        .addGap(118, 118, 118))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnUpdateUser)
                        .addGap(18, 18, 18)
                        .addComponent(btnBlockUser, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(36, 36, 36)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUserName)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addComponent(btnCheckUsername, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDisplayName)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbUserType)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPassword)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPasswordConfirm)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(63, 63, 63)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnUpdateUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnBlockUser)
                            .addComponent(btnAddUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(58, 58, 58))
        );

        jTabbedPane1.addTab("User Managemement", jPanel2);

        jPanel3.setBackground(new java.awt.Color(71, 120, 217));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Employee's NIC No.");

        txtEmpNIC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtEmpNIC.setNextFocusableComponent(btnCheckUsername);

        tblEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Employee Name", "Designation", "Joined Date", "Basic Salary"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblEmployee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEmployeeMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblEmployee);
        if (tblEmployee.getColumnModel().getColumnCount() > 0) {
            tblEmployee.getColumnModel().getColumn(0).setPreferredWidth(3);
        }

        btnAddEmp.setFont(new java.awt.Font("Malgun Gothic", 0, 14)); // NOI18N
        btnAddEmp.setText("Add Employee");
        btnAddEmp.setEnabled(false);
        btnAddEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddEmpActionPerformed(evt);
            }
        });

        btnUpdateEmp.setFont(new java.awt.Font("Malgun Gothic", 0, 14)); // NOI18N
        btnUpdateEmp.setText("Update Employee");
        btnUpdateEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateEmpActionPerformed(evt);
            }
        });

        btnCheckNIC.setFont(new java.awt.Font("Malgun Gothic", 0, 12)); // NOI18N
        btnCheckNIC.setText("Check for exsisting NICs");
        btnCheckNIC.setNextFocusableComponent(txtDisplayName);
        btnCheckNIC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckNICActionPerformed(evt);
            }
        });

        txtEmpName.setNextFocusableComponent(cmbUserType);

        cmbEmpDesignation.setFont(new java.awt.Font("Malgun Gothic", 0, 14)); // NOI18N
        cmbEmpDesignation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "Driver", "Clerk", "Accountant", "Manager", "Human Resource Manager", "Mechanic" }));
        cmbEmpDesignation.setNextFocusableComponent(txtPassword);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Employee Address");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Designation");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Employee Name");

        txtEmpAddress.setNextFocusableComponent(cmbUserType);

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Contact No.");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Email Address");

        txtEmpContactNo.setNextFocusableComponent(cmbUserType);

        txtEmpEmail.setNextFocusableComponent(cmbUserType);

        txtEmpBasicSal.setNextFocusableComponent(cmbUserType);

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Basic Salary");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEmpName)
                            .addComponent(txtEmpNIC)
                            .addComponent(txtEmpAddress)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnCheckNIC)
                                    .addComponent(cmbEmpDesignation, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtEmpContactNo)
                            .addComponent(txtEmpEmail)
                            .addComponent(txtEmpBasicSal))
                        .addGap(84, 84, 84))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnAddEmp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdateEmp)
                        .addGap(142, 142, 142)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtEmpNIC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCheckNIC)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEmpName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtEmpAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbEmpDesignation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(txtEmpContactNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(txtEmpEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEmpBasicSal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAddEmp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnUpdateEmp)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58))
        );

        jTabbedPane1.addTab("Employee Management", jPanel3);

        jPanel4.setBackground(new java.awt.Color(71, 120, 217));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 978, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 447, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Maintenance", jPanel4);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddUserActionPerformed
        // TODO add your handling code here:
        String Username = txtUserName.getText();
        String DisplayName = txtDisplayName.getText();
        String UserType = (String)cmbUserType.getSelectedItem();
        String Password = txtPassword.getText();
        String PasswordConfirm = txtPasswordConfirm.getText();
        
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3308/euro_db", "root", "");
            
            //String sql = ("INSERT INTO 'user' ('username', 'password', 'usertype', 'displayName') VALUES (?, ?, ?, ?)");
            String sql = ("INSERT INTO `user` (`username`, `password`, `displayName`, `usertype`) VALUES (?, ?, ?, ?)");
            
            ps1 = con.prepareStatement(sql);
            
            ps1.setString(1, Username);
            ps1.setString(2, Password);
            ps1.setString(3, DisplayName);
            ps1.setString(4, UserType);
            
            if (Password.equals(PasswordConfirm))
            {
                ps1.executeUpdate();
                UserTableUpdate();
                JOptionPane.showMessageDialog(this, "User Registered Successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
                UserTableUpdate();
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Password Missmatch", "User not Registered", JOptionPane.ERROR_MESSAGE);
                UserTableUpdate();
            }
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        
    }//GEN-LAST:event_btnAddUserActionPerformed

    private void btnUpdateUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateUserActionPerformed
        // TODO add your handling code here:
        String Username = txtUserName.getText();
        String DisplayName = txtDisplayName.getText();
        String UserType = (String)cmbUserType.getSelectedItem();
        String Password = txtPassword.getText();
        String PasswordConfirm = txtPasswordConfirm.getText();
        boolean ans2=validateusereform(Username,DisplayName,Password,PasswordConfirm);
        if(ans2==false)
        {
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3308/euro_db", "root", "");
            
            st1 = con.createStatement();
            
            String sql1 = "UPDATE `user` SET `username`= '"+Username+"', `password`='"+Password+"',`usertype`='"+UserType+"',`displayName`='"+DisplayName+"', `userStatus` = 'Available' WHERE username = '"+usernameS+"' ";

            if (Password.isEmpty())
            {
                JOptionPane.showMessageDialog(this, "Please Enter a Password", "No Password Entered", JOptionPane.ERROR_MESSAGE);
            }
            else if (Password.equals(PasswordConfirm))
            {
                st1.executeUpdate(sql1);
                UserTableUpdate();
                JOptionPane.showMessageDialog(this, "User account "+txtDisplayName.getText()+" is Updated ! ", "Success", JOptionPane.INFORMATION_MESSAGE);
                UserTableUpdate();
                con.close();
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Password Missmatch", "User not updated", JOptionPane.ERROR_MESSAGE);
                UserTableUpdate();
            }
            
        }
        catch (HeadlessException | ClassNotFoundException | SQLException e)
        {
            JOptionPane.showMessageDialog(this, e, "Exception Error !", JOptionPane.ERROR_MESSAGE);
        }
        }
    }//GEN-LAST:event_btnUpdateUserActionPerformed

    private void btnCheckUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckUsernameActionPerformed
        // TODO add your handling code here:
        String username = txtUserName.getText();
        String sql = ("SELECT username FROM user WHERE username = '"+username+"' ");
        
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3308/euro_db", "root", "");
            
            ps1 = con.prepareStatement(sql);
            rs = ps1.executeQuery();
            
            if (rs.next())
            {
                JOptionPane.showMessageDialog(this, ""+username+" already exists ! ", "Enter a different username", JOptionPane.INFORMATION_MESSAGE);
                btnAddUser.setEnabled(false);
            }
            else
            {
                JOptionPane.showMessageDialog(this, ""+username+" is available ", "Proceed to next step", JOptionPane.INFORMATION_MESSAGE);
                btnAddUser.setEnabled(true);
            }
            
            con.close();
        }
        catch (ClassNotFoundException | SQLException e)
        {
            JOptionPane.showMessageDialog(this, e, "Exception Error !", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCheckUsernameActionPerformed

    private void tblUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUserMouseClicked
        // TODO add your handling code here:
        int row = tblUser.getSelectedRow();
        String TableClick=(tblUser.getModel().getValueAt(row,1).toString());
        String sql = ("SELECT * FROM user WHERE username = '"+TableClick+"' ");
        
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3308/euro_db", "root", "");
            
            ps1 = con.prepareStatement(sql);
            rs = ps1.executeQuery();
            
            if (rs.next())
            {
                txtUserName.setText(rs.getString("username"));
                usernameS = rs.getString("username");
                txtDisplayName.setText(rs.getString("displayName"));
                //cmbUserType.setSelectedItem(ABORT);
            }
            
            con.close();
        }
        catch (ClassNotFoundException | SQLException e)
        {
            JOptionPane.showMessageDialog(this, e, "Exception Error !", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_tblUserMouseClicked

    private void btnBlockUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBlockUserActionPerformed
        // TODO add your handling code here:
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3308/euro_db", "root", "");
            
            st1 = con.createStatement();
            
            String sql1 = "UPDATE `user` SET `userStatus` = 'Unavailable' WHERE username = '"+usernameS+"' ";
            JOptionPane.showMessageDialog(null, txtDisplayName.getText()+" is blocked from using the System. Click Update User to regain access to " + txtDisplayName.getText());
            
            st1.executeUpdate(sql1);
            UserTableUpdate();
        }
        catch (HeadlessException | ClassNotFoundException | SQLException e)
        {
            JOptionPane.showMessageDialog(this, e, "Exception Error !", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnBlockUserActionPerformed

    private void tblEmployeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEmployeeMouseClicked
        // TODO add your handling code here:
        int row = tblEmployee.getSelectedRow();
        String TableClick=(tblEmployee.getModel().getValueAt(row,0).toString());
        String sql = ("SELECT * FROM employee WHERE empID = '"+TableClick+"' ");
        
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3308/euro_db", "root", "");
            
            ps1 = con.prepareStatement(sql);
            rs = ps1.executeQuery();
            
            if (rs.next())
            {
                
                txtEmpAddress.setText(rs.getString("empAddress"));
                txtEmpBasicSal.setText(String.valueOf(rs.getFloat("basicSallary")));
                txtEmpContactNo.setText(rs.getString("empcontactNo"));
                txtEmpEmail.setText(rs.getString("empEmail"));
                txtEmpNIC.setText(rs.getString("empNIC"));
                txtEmpName.setText(rs.getString("empName"));
                //usernameS = rs.getString("username");
                //txtDisplayName.setText(rs.getString("displayName"));
                //cmbUserType.setSelectedItem(ABORT);
            }
            
            con.close();
        }
        catch (ClassNotFoundException | SQLException e)
        {
            JOptionPane.showMessageDialog(this, e, "Exception Error !", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_tblEmployeeMouseClicked

    private void btnAddEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddEmpActionPerformed
        // TODO add your handling code here:
        String empnic = txtEmpNIC.getText();
        String empname = txtEmpName.getText();
        String empaddress = txtEmpAddress.getText();
        String empdesignation = (String)cmbEmpDesignation.getSelectedItem();
        String empcontact = txtEmpContactNo.getText();
        String empemail = txtEmpEmail.getText();
        String empbasicsal = txtEmpBasicSal.getText();
        String empavail;
        
        DateFormat dateFormat2 = new SimpleDateFormat("yyyy-MM-dd");
        String dateString2 = dateFormat2.format(new Date());
        String empjoineddate = dateString2;
        
        if (empdesignation == "Driver")
        {
            empavail="Available";
        }
        else
        {
            empavail="";
        }
        boolean ans1=validateemployeeform(empname,empaddress,empnic,empcontact,empemail,empbasicsal);
        if(ans1==false)
        {
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3308/euro_db", "root", "");
            
            String sql = ("INSERT INTO `employee` (`empName`, `empAddress`, `designation`, `empcontactNo`, `empEmail`, `empNIC`, `empJoinedDate`, `basicSallary`, `Availability`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)");
            
            ps1 = con.prepareStatement(sql);
            
            ps1.setString(1, empname);
            ps1.setString(2, empaddress);
            ps1.setString(3, empdesignation);
            ps1.setString(4, empcontact);
            ps1.setString(5, empemail);
            ps1.setString(6, empnic);
            ps1.setString(7, empjoineddate);
            ps1.setString(8, empbasicsal);
            ps1.setString(9, empavail);
            
            ps1.executeUpdate();
            EmployeeTableUpdate();
            
            JOptionPane.showMessageDialog(null, "Employee "+empname+"'s details added successfully !");
            con.close();
            txtEmpNIC.setText("");
            txtEmpName.setText("");
            txtEmpAddress.setText("");
            txtEmpBasicSal.setText("");
            txtEmpContactNo.setText("");
            txtEmpEmail.setText("");
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        }
    }//GEN-LAST:event_btnAddEmpActionPerformed

    private void btnUpdateEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateEmpActionPerformed
        // TODO add your handling code here:
        String empnic = txtEmpNIC.getText();
        String empname = txtEmpName.getText();
        String empaddress = txtEmpAddress.getText();
        String empdesignation = (String)cmbEmpDesignation.getSelectedItem();
        String empcontact = txtEmpContactNo.getText();
        String empemail = txtEmpEmail.getText();
        String empbasicsal = txtEmpBasicSal.getText();
        //String empavail;
        
        DateFormat dateFormat2 = new SimpleDateFormat("yyyy-MM-dd");
        String dateString2 = dateFormat2.format(new Date());
        String empjoineddate = dateString2;
        boolean ans2=updateemployeeform(empname,empaddress,empcontact,empemail,empbasicsal);
        if(ans2==false)
        {
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3308/euro_db", "root", "");
            
            st1 = con.createStatement();
            
            String sql = "UPDATE `employee` SET `empName`= '"+empname+"',`empAddress`= '"+empaddress+"',`designation`= '"+empdesignation+"',`empcontactNo`= '"+empcontact+"',`empEmail`= '"+empemail+"',`empJoinedDate`= '"+empjoineddate+"',`basicSallary`= '"+empbasicsal+"' WHERE empNIC = '"+empnic+"'";
            
                st1.executeUpdate(sql);
                EmployeeTableUpdate();
                JOptionPane.showMessageDialog(this, "Employee details of "+empname+" is Updated ! ", "Success", JOptionPane.INFORMATION_MESSAGE);
                con.close();
                txtEmpNIC.setText("");
                txtEmpName.setText("");
                txtEmpAddress.setText("");
                txtEmpBasicSal.setText("");
                txtEmpContactNo.setText("");
                txtEmpEmail.setText("");
        }
        catch (HeadlessException | ClassNotFoundException | SQLException e)
        {
            JOptionPane.showMessageDialog(this, e, "Exception Error !", JOptionPane.ERROR_MESSAGE);
        }
        }
    }//GEN-LAST:event_btnUpdateEmpActionPerformed

    private void btnCheckNICActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckNICActionPerformed
        // TODO add your handling code here:
        String nic = txtEmpNIC.getText();
        String sql = ("SELECT empNIC FROM employee WHERE empNIC = '"+nic+"' ");
        
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3308/euro_db", "root", "");
            
            ps1 = con.prepareStatement(sql);
            rs = ps1.executeQuery();
            
            if (rs.next())
            {
                JOptionPane.showMessageDialog(this, ""+nic+" already exists ! ", "Enter a different username", JOptionPane.INFORMATION_MESSAGE);
                btnAddEmp.setEnabled(false);
            }
            else
            {
                JOptionPane.showMessageDialog(this, ""+nic+" is available ", "Proceed to next step", JOptionPane.INFORMATION_MESSAGE);
                btnAddEmp.setEnabled(true);
            }
            
            con.close();
        }
        catch (ClassNotFoundException | SQLException e)
        {
            JOptionPane.showMessageDialog(this, e, "Exception Error !", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCheckNICActionPerformed

    private void tblNotifyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNotifyMouseClicked
        // TODO add your handling code here:
        int row = tblNotify.getSelectedRow();
        String TableClick = (tblNotify.getModel().getValueAt(row,0).toString());
        String sql = ("SELECT * FROM customer WHERE cusID = '"+TableClick+"' ");
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3308/euro_db", "root", "");
            
            ps1 = con.prepareStatement(sql);
            rs = ps1.executeQuery();
            
            if (rs.next())
            {
                CusEmailAdd = (rs.getString("cusEmail"));
            }
            con.close();
            //JOptionPane.showMessageDialog(null, CusEmailAdd);
            lblNotify.setText("Send a reminder about payment to "+CusEmailAdd);
            btnSendNotify.setEnabled(true);
        }
        catch (ClassNotFoundException | SQLException e)
        {
            JOptionPane.showMessageDialog(this, e, "Exception Error !", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_tblNotifyMouseClicked

    private void btnSendNotifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendNotifyActionPerformed
        // TODO add your handling code here:
        String Rmail = CusEmailAdd;
        String Sub = "EURO Rent a Car Reminder";
        String Text = "Dear Customer,\n\n"
                + "This is a kindly reminder about your due Payment. Please pay "
                + "on or before the due date to avoid being fined additional charges. "
                + "If you already paid the monthly payment, ignore this message.\n\n"
                + "Thank you.\n"
                + "Euro Rent a Car & Travels\n\n"
                + "(This is a computer generated message)";
        String Msg = null;
        Properties props = new Properties();
        props.put("mail.smtp.auth", true);
        props.put("mail.smtp.starttls.enable", true);
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.port", "587");
        props.setProperty("mail.smtp.ssl.trust", "smtp.gmail.com");
        
        Session session = Session.getInstance(props, new javax.mail.Authenticator()
        {
            @Override
            protected PasswordAuthentication getPasswordAuthentication()
            {
                return new PasswordAuthentication("eurorentacar20@gmail.com", "euro12345");
            }
        });
        
        try
        {
            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress("eurorentacar20@gmail.com"));//ur email
            message.setRecipients(Message.RecipientType.TO,
            InternetAddress.parse(Rmail));//u will send to
            message.setSubject(Sub);
            message.setText(Text);
            Transport.send(message);
            Msg="true";

        } catch (MessagingException e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        
        if(Msg.equals("true"))
        {
            JOptionPane.showMessageDialog(this, "Notification sent successfully");
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Notification sent failed");
        }
    }//GEN-LAST:event_btnSendNotifyActionPerformed

    /**
     * @param args the command line arguments
     */
    public void NotificationTableUpdate()
    {
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3308/euro_db", "root", "");
            ps1 = con.prepareStatement("SELECT * FROM rental r INNER JOIN customer c on r.cusID = c.cusID");
            
            rs = ps1.executeQuery();
            rsmd = rs.getMetaData();
            
            int c = rsmd.getColumnCount();
            
            DefaultTableModel dtm  = (DefaultTableModel)tblNotify.getModel();
            
            dtm.setRowCount(0);
            
            while (rs.next())
            {
                Vector v = new Vector();
                for (int i=1; i<=c; i++)
                {
                    v.add(rs.getString("cusID"));
                    v.add(rs.getString("cusName"));
                    v.add(rs.getString("cusEmail"));
                    v.add(rs.getString("vehicleNo"));
                }
                dtm.addRow(v);
            }
            con.close();
        }
        catch (ClassNotFoundException | SQLException e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    public void UserTableUpdate()
    {
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3308/euro_db", "root", "");
            ps1 = con.prepareStatement("SELECT * FROM user");
            
            rs = ps1.executeQuery();
            rsmd = rs.getMetaData();
            
            int c = rsmd.getColumnCount();
            
            DefaultTableModel dtm  = (DefaultTableModel)tblUser.getModel();
            
            dtm.setRowCount(0);
            
            while (rs.next())
            {
                Vector v = new Vector();
                for (int i=1; i<=c; i++)
                {
                    v.add(rs.getString("displayName"));
                    v.add(rs.getString("username"));
                    v.add(rs.getString("userType"));
                    v.add(rs.getString("userStatus"));
                }
                dtm.addRow(v);
            }
            con.close();
        }
        catch (ClassNotFoundException | SQLException e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    public void EmployeeTableUpdate()
    {
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3308/euro_db", "root", "");
            ps1 = con.prepareStatement("SELECT * FROM employee");
            
            rs = ps1.executeQuery();
            rsmd = rs.getMetaData();
            
            int c = rsmd.getColumnCount();
            
            DefaultTableModel dtm  = (DefaultTableModel)tblEmployee.getModel();
            
            dtm.setRowCount(0);
            
            while (rs.next())
            {
                Vector v = new Vector();
                for (int i=1; i<=c; i++)
                {
                    v.add(rs.getString("empID"));
                    v.add(rs.getString("empName"));
                    v.add(rs.getString("designation"));
                    v.add(rs.getString("empJoinedDate"));
                    v.add(rs.getString("basicSallary"));
                }
                dtm.addRow(v);
            }
            con.close();
        }
        catch (ClassNotFoundException | SQLException e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminPanelUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminPanelUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminPanelUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminPanelUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminPanelUI().setVisible(true);
            }
        });
    }

    public boolean validateemployeeform(String name,String address,String NIC,String contactno,String email,String salary)
    {
        boolean errorFlag = false;

        if(name==null || name.equals(""))
        {
            JOptionPane.showMessageDialog(null, "Please enter valid Employee-name.");
            errorFlag=true;
        }
        
        if(address==null || address.equals(""))
        {
            JOptionPane.showMessageDialog(null, "Please enter valid Employee-address.");
            errorFlag=true;
        }
        Pattern pattern = Pattern.compile("\\d{10}");
        Matcher matcher = pattern.matcher(contactno);
        
        if(contactno==null || contactno.equals("")||! matcher.matches())
        {
            
            JOptionPane.showMessageDialog(null, "Please enter valid Employee-contact number");
            errorFlag=true;
        }
        
        if(email==null || email.equals("")||!email.matches("^[A-Za-z0-9_.]+[@][A-Za-z.]+$"))
        {
            JOptionPane.showMessageDialog(null, "Please enter valid Employee-email address.");
            errorFlag=true;
        }

        if(NIC==null || NIC.equals("")||!NIC.matches("^[0-9]{0,12}[vVxX]$"))
        {
            JOptionPane.showMessageDialog(null, "Please enter valid Employee-NIC.");
            errorFlag=true;
        }
        Pattern pattern2 = Pattern.compile("\\d{0,5}");
        Matcher matcher2 = pattern2.matcher(salary);
        if(salary==null || !matcher2.matches())
        {
            JOptionPane.showMessageDialog(null, "Please enter valid Basic salary.");
            errorFlag=true;
        }
        return errorFlag;
         
    }
    
        public boolean updateemployeeform(String name,String address,String contactno,String email,String salary)
    {
        boolean errorFlag = false;

        if(name==null || name.equals(""))
        {
            JOptionPane.showMessageDialog(null, "Please enter valid Employee-name.");
            errorFlag=true;
        }
        
        if(address==null || address.equals(""))
        {
            JOptionPane.showMessageDialog(null, "Please enter valid Employee-address.");
            errorFlag=true;
        }
        Pattern pattern = Pattern.compile("\\d{10}");
        Matcher matcher = pattern.matcher(contactno);
        
        if(contactno==null || contactno.equals("")||! matcher.matches())
        {
            
            JOptionPane.showMessageDialog(null, "Please enter valid Employee-contact number");
            errorFlag=true;
        }
        
        if(email==null || email.equals("")||!email.matches("^[A-Za-z0-9_.]+[@][A-Za-z.]+$"))
        {
            JOptionPane.showMessageDialog(null, "Please enter valid Employee-email address.");
            errorFlag=true;
        }
        Pattern pattern2 = Pattern.compile("\\d{0,5}");
        Matcher matcher2 = pattern2.matcher(salary);
        if(salary==null || !matcher2.matches())
        {
            JOptionPane.showMessageDialog(null, "Please enter valid Basic salary.");
            errorFlag=true;
        }
        return errorFlag;
         
    }
    
        public boolean validateusereform(String name,String dname,String password,String cpassword)
    {
        boolean errorFlag = false;

        if(name==null || name.equals(""))
        {
            JOptionPane.showMessageDialog(null, "Please enter valid username.");
            errorFlag=true;
        }
        
        if(dname==null || dname.equals(""))
        {
            JOptionPane.showMessageDialog(null, "Please enter valid Display-name.");
            errorFlag=true;
        }

        if(password==null || password.equals("")||!(password.length()<=8)||!(password.length()>21))
        {
            JOptionPane.showMessageDialog(null, "Please enter valid Password.");
            errorFlag=true;
        }

        if(!(password.equals(cpassword)))
        {
            JOptionPane.showMessageDialog(null, "Does not match.");
            errorFlag=true;
        }
        return errorFlag;
         
    }
    
        
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddEmp;
    private javax.swing.JButton btnAddUser;
    private javax.swing.JButton btnBlockUser;
    private javax.swing.JButton btnCheckNIC;
    private javax.swing.JButton btnCheckUsername;
    private javax.swing.JButton btnSendNotify;
    private javax.swing.JButton btnUpdateEmp;
    private javax.swing.JButton btnUpdateUser;
    private javax.swing.JComboBox<String> cmbEmpDesignation;
    private javax.swing.JComboBox<String> cmbUserType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblNotify;
    private javax.swing.JTable tblEmployee;
    private javax.swing.JTable tblNotify;
    private javax.swing.JTable tblUser;
    private javax.swing.JTextField txtDisplayName;
    private javax.swing.JTextField txtEmpAddress;
    private javax.swing.JTextField txtEmpBasicSal;
    private javax.swing.JTextField txtEmpContactNo;
    private javax.swing.JTextField txtEmpEmail;
    private javax.swing.JTextField txtEmpNIC;
    private javax.swing.JTextField txtEmpName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JPasswordField txtPasswordConfirm;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
